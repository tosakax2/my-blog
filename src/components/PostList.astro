---
export interface Post {
  url: string;
  frontmatter: {
    title: string;
    date: string;
    categories?: string[];
    tags?: string[];
  };
}
export interface Props {
  posts: Post[];
}
import { sortTerms } from '../utils/sortTerms';
const { posts } = Astro.props as Props;
---
<ul class="space-y-4">
  {posts.map((post) => (
    <li>
      <a
        href={post.url}
        class="
        block bg-[var(--color-bg)] border border-[var(--color-border)] text-[var(--color-text)]
        rounded-md p-5 transition-all duration-200 ease-in-out
        hover:translate-x-[-4px] hover:translate-y-[-4px]
        hover:shadow-[4px_4px_0_var(--color-accent)]
        hover:border-[var(--color-accent)]"
      >
        <div class="flex flex-wrap items-center gap-2">
          <time
            class="font-semibold text-sm text-[var(--color-subtext)]"
            datetime={post.frontmatter.date}
            >
            {post.frontmatter.date.slice(0, 10)}
          </time>
        </div>
        <h2 class="font-bold text-xl">{post.frontmatter.title}</h2>
        <div class="flex flex-wrap items-center gap-2 mt-2">
          {post.frontmatter.categories?.length &&
            sortTerms(post.frontmatter.categories).map((c) => (
              <span class="font-semibold border border-[var(--color-accent)] text-[var(--color-accent)] px-2 py-0.5 rounded text-xs">
                {c}
              </span>
            ))}
          {post.frontmatter.tags?.length &&
            sortTerms(post.frontmatter.tags).map((t) => (
              <span class="font-semibold border border-[var(--color-subtext)] text-[var(--color-subtext)] px-2 py-0.5 rounded text-xs">
                # {t}
              </span>
            ))}
        </div>
      </a>
    </li>
  ))}
</ul>
