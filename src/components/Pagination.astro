---
export interface Props {
  current: number;
  total: number;
  baseUrl: string; // e.g. '/blog/page'
}
const { current, total, baseUrl } = Astro.props as Props;
const pages = Array.from({ length: total }, (_, i) => i + 1);
---
{total > 1 && (
  <nav class="flex justify-center mt-8">
    <ul class="flex flex-wrap items-center gap-2">
      {current > 1 && (
        <li>
          <a href={`${baseUrl}/${current - 1}`} class="px-3 py-1 border border-[var(--color-border)] rounded transition-colors duration-200 hover:border-[var(--color-accent)]">
            Prev
          </a>
        </li>
      )}
      {pages.map(page => (
        <li>
          {page === current ? (
            <span class="px-3 py-1 font-bold border border-[var(--color-accent)] text-[var(--color-accent)] rounded">{page}</span>
          ) : (
            <a href={`${baseUrl}/${page}`} class="px-3 py-1 border border-[var(--color-border)] rounded transition-colors duration-200 hover:border-[var(--color-accent)]">
              {page}
            </a>
          )}
        </li>
      ))}
      {current < total && (
        <li>
          <a href={`${baseUrl}/${current + 1}`} class="px-3 py-1 border border-[var(--color-border)] rounded transition-colors duration-200 hover:border-[var(--color-accent)]">
            Next
          </a>
        </li>
      )}
    </ul>
  </nav>
)}
